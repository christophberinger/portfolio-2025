---
// Sticky contact bar that appears when scrolling down
export interface Props {
  showAt?: number; // Scroll progress (0-1) when button should appear
}

const { showAt = 0.15 } = Astro.props;
---

<div class="sticky-contact" id="sticky-contact" data-show-at={showAt}>
  <div class="sticky-content">
    <a href="mailto:c@beringer.io?Subject=Hello" class="say-hello-btn" title="Write me an email">
      Say Hello
    </a>
  </div>
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  function initStickyContact() {
    const stickyContact = document.getElementById('sticky-contact');
    
    if (!stickyContact) {
      console.warn('StickyContact: sticky contact element not found');
      return;
    }

    // Get the showAt parameter from the element
    const showAt = parseFloat(stickyContact.getAttribute('data-show-at') || '0.15');
    
    console.log(`StickyContact: Initializing scroll animation (show at ${showAt * 100}%)`);

    // Initially hide the sticky contact
    gsap.set(stickyContact, { y: 100, opacity: 0 });

    // Show after scrolling down to specified progress
    ScrollTrigger.create({
      trigger: "body",
      start: "top top-=100",
      end: "max",
      onUpdate: self => {
        if (self.progress > showAt) {
          gsap.to(stickyContact, {
            y: 0,
            opacity: 1,
            duration: 0.3,
            ease: "power2.out"
          });
        } else {
          gsap.to(stickyContact, {
            y: 100,
            opacity: 0,
            duration: 0.3,
            ease: "power2.out"
          });
        }
      }
    });
  }

  // iOS Safari-friendly initialization
  function safeInitSticky() {
    setTimeout(() => {
      initStickyContact();
      // Force ScrollTrigger refresh for iOS Safari
      setTimeout(() => ScrollTrigger.refresh(), 100);
    }, 150);
  }

  // Multiple init strategies for iOS Safari
  document.addEventListener('DOMContentLoaded', safeInitSticky);
  document.addEventListener('astro:page-load', safeInitSticky);
  
  // iOS Safari sometimes needs this
  window.addEventListener('load', () => {
    setTimeout(() => ScrollTrigger.refresh(), 200);
  });
  
  // Handle iOS viewport/orientation changes
  window.addEventListener('resize', () => {
    ScrollTrigger.refresh();
  });
  
  window.addEventListener('orientationchange', () => {
    setTimeout(() => ScrollTrigger.refresh(), 300);
  });
  
  // Immediate init if already loaded
  if (document.readyState !== 'loading') {
    safeInitSticky();
  }
</script>

<style>
  .sticky-contact {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    background: rgba(0, 0, 0, 0.8);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  .sticky-content {
    max-width: var(--max-width);
    margin: 0 auto;
    padding: var(--space-sm) var(--content-padding);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .say-hello-btn {
    color: var(--text-color);
    text-decoration: none;
    font-size: 1.125rem;
    font-weight: 600;
    padding: var(--space-sm) var(--space-lg);
    border-radius: 8px;
    transition: all 0.2s ease;
    border: 2px solid rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.05);
  }

  .say-hello-btn:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  @media (max-width: 600px) {
    .say-hello-btn {
      font-size: 1rem;
      padding: var(--space-xs) var(--space-md);
    }
  }
</style>